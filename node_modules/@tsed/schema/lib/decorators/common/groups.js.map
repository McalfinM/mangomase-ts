{"version":3,"file":"groups.js","sourceRoot":"","sources":["../../../src/decorators/common/groups.ts"],"names":[],"mappings":";;;AAAA,qCAA0C;AAE1C,yDAAoD;AACpD,iDAA4C;AAE5C;;;;;;;;GAQG;AACH,SAAgB,MAAM,CAAC,GAAG,MAAgB;IACxC,OAAO,2BAAY,CAAC,CAAC,MAAM,EAAE,EAAE;QAC7B,IAAI,MAAM,CAAC,aAAa,KAAK,qBAAc,CAAC,IAAI,EAAE;YAChD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAa,EAAE,WAAqB,EAAE,EAAE;gBACzE,IAAI,CAAC,IAAI,EAAE;oBACT,IAAI,yBAAW,CAAC,MAAM,EAAE,WAAW,CAAC,EAAE;wBACpC,OAAO,IAAI,CAAC;qBACb;iBACF;gBAED,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,MAAM,CAAC,aAAa,KAAK,qBAAc,CAAC,KAAK,EAAE;YACjD,MAAM,CAAC,SAAU,CAAC,MAAM,GAAG,MAAM,CAAC;SACnC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAlBD,wBAkBC","sourcesContent":["import {DecoratorTypes} from \"@tsed/core\";\nimport micromatch from \"micromatch\";\nimport {matchGroups} from \"../../utils/matchGroups\";\nimport {JsonEntityFn} from \"./jsonEntityFn\";\n\n/**\n * Apply groups validation strategy\n *\n * @decorator\n * @validation\n * @swagger\n * @schema\n * @input\n */\nexport function Groups(...groups: string[]): Function {\n  return JsonEntityFn((entity) => {\n    if (entity.decoratorType === DecoratorTypes.PROP) {\n      entity.schema.$hooks.on(\"groups\", (prev: boolean, givenGroups: string[]) => {\n        if (!prev) {\n          if (matchGroups(groups, givenGroups)) {\n            return true;\n          }\n        }\n\n        return prev;\n      });\n    }\n\n    if (entity.decoratorType === DecoratorTypes.PARAM) {\n      entity.parameter!.groups = groups;\n    }\n  });\n}\n"]}