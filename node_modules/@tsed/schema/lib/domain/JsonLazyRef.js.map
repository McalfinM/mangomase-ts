{"version":3,"file":"JsonLazyRef.js","sourceRoot":"","sources":["../../src/domain/JsonLazyRef.ts"],"names":[],"mappings":";;;AAAA,qCAAwC;AAExC,sEAAiE;AACjE,uDAAkD;AAElD,MAAa,WAAW;IACtB,YAAqB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;IAAG,CAAC;IAEjD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,iCAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC;IACrD,CAAC;IAED,IAAI,IAAI;QACN,OAAO,aAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,MAAM,CAAC,OAA2B;QAChC,OAAO,IAAI,CAAC,OAAO,EAAE,IAAI,yCAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACrE,CAAC;CACF;AAlBD,kCAkBC","sourcesContent":["import {nameOf, Type} from \"@tsed/core\";\nimport {JsonSchemaOptions} from \"../interfaces/JsonSchemaOptions\";\nimport {serializeJsonSchema} from \"../utils/serializeJsonSchema\";\nimport {JsonEntityStore} from \"./JsonEntityStore\";\n\nexport class JsonLazyRef {\n  constructor(readonly getType: () => Type<any>) {}\n\n  get target() {\n    return this.getType();\n  }\n\n  get schema() {\n    return JsonEntityStore.from(this.getType()).schema;\n  }\n\n  get name() {\n    return nameOf(this.getType());\n  }\n\n  toJSON(options?: JsonSchemaOptions) {\n    return this.getType() && serializeJsonSchema(this.schema, options);\n  }\n}\n"]}